{"ast":null,"code":"var _jsxFileName = \"/Users/lperez1/Desktop/todo-application/src/components/App/js/App.js\";\nimport React, { useState } from 'react';\nimport '../css/App.css';\nimport Todo from '../../Todo/js/Todo';\nimport TodoForm from '../../TodoForm/js/TodoForm';\n\nconst App = props => {\n  const [todos, setTodos] = useState([//[] = deconstructing\n  {\n    text: \"Learn about React\",\n    isCompleted: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false\n  }]);\n\n  const addTodoHandler = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodoHandler = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodoHandler = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodoHandler,\n    removeTodo: removeTodoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodoHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lperez1/Desktop/todo-application/src/components/App/js/App.js"],"names":["React","useState","Todo","TodoForm","App","props","todos","setTodos","text","isCompleted","addTodoHandler","newTodos","completeTodoHandler","index","removeTodoHandler","splice","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAE;AACnC;AACEO,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADiC,EAKjC;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALiC,EASjC;AACED,IAAAA,IAAI,EAAE,4BADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GATiC,CAAD,CAAlC;;AAeA,QAAMC,cAAc,GAAIF,IAAD,IAAU;AAC/B,UAAMG,QAAQ,GAAG,CAAC,GAAGL,KAAJ,EAAW;AAAEE,MAAAA;AAAF,KAAX,CAAjB;AACAD,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,UAAMF,QAAQ,GAAG,CAAC,GAAGL,KAAJ,CAAjB;AACAK,IAAAA,QAAQ,CAACE,KAAD,CAAR,CAAgBJ,WAAhB,GAA8B,IAA9B;AACAF,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAJD;;AAMA,QAAMG,iBAAiB,GAAID,KAAD,IAAW;AACnC,UAAMF,QAAQ,GAAG,CAAC,GAAGL,KAAJ,CAAjB;AACAK,IAAAA,QAAQ,CAACI,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACAN,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOJ,KAAP,kBACT,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAEA,KAFT;AAGE,IAAA,IAAI,EAAEI,IAHR;AAIE,IAAA,YAAY,EAAEL,mBAJhB;AAKE,IAAA,UAAU,EAAEE,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAUE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEJ,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD,CAjDD;;AAmDA,eAAeN,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../css/App.css';\nimport Todo from '../../Todo/js/Todo';\nimport TodoForm from '../../TodoForm/js/TodoForm';\n\nconst App = props => {\n  const [todos, setTodos] = useState([ //[] = deconstructing\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodoHandler = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodoHandler = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodoHandler = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodoHandler}\n            removeTodo={removeTodoHandler}\n          />\n        ))}\n        <TodoForm addTodo={addTodoHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}